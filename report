The original 7*3 input matrix:

A[0][0] = 1.000000	A[0][1] = 6.000000	A[0][2] = -1.000000	
A[1][0] = 2.000000	A[1][1] = -2.000000	A[1][2] = 1.000000	
A[2][0] = -2.000000	A[2][1] = 1.000000	A[2][2] = 4.000000	
A[3][0] = 4.000000	A[3][1] = 8.000000	A[3][2] = -5.000000	
A[4][0] = 5.000000	A[4][1] = -4.000000	A[4][2] = 1.000000	
A[5][0] = 2.000000	A[5][1] = 2.000000	A[5][2] = -2.000000	
A[6][0] = -1.000000	A[6][1] = 3.000000	A[6][2] = 4.000000


****************************** qrhouse Loop 1 ******************************

A = 
A[0][0] = 1.000000	A[0][1] = 6.000000	A[0][2] = -1.000000	
A[1][0] = 2.000000	A[1][1] = -2.000000	A[1][2] = 1.000000	
A[2][0] = -2.000000	A[2][1] = 1.000000	A[2][2] = 4.000000	
A[3][0] = 4.000000	A[3][1] = 8.000000	A[3][2] = -5.000000	
A[4][0] = 5.000000	A[4][1] = -4.000000	A[4][2] = 1.000000	
A[5][0] = 2.000000	A[5][1] = 2.000000	A[5][2] = -2.000000	
A[6][0] = -1.000000	A[6][1] = 3.000000	A[6][2] = 4.000000


Get the first column of A, a1(column vector displayed in a row):

1.000000, 2.000000, -2.000000, 4.000000, 5.000000, 2.000000, -1.000000


Compute the reflector v1 = a1 - sign(a11)*||a1||*e1,
since a11 = 1.000000, sign should be 1, and ||a1|| = 7.416198,
after normalizing v1[0] to 1, v1 will be(column vector displayed in a row):

1.000000, -0.311711, 0.311711, -0.623422, -0.779278, -0.311711, 0.155856


Now we calculate H1 = I - (2/v1'v1)v1v1':
(Although H itself is not needed in smart way, here we just use it to get Q, then verify whether Q * R = original A)

H[0][0] = 0.134840 H[0][1] = 0.269680 H[0][2] = -0.269680 H[0][3] = 0.539360 H[0][4] = 0.674200 H[0][5] = 0.269680 H[0][6] = -0.134840 
H[1][0] = 0.269680 H[1][1] = 0.915938 H[1][2] = 0.084062 H[1][3] = -0.168124 H[1][4] = -0.210156 H[1][5] = -0.084062 H[1][6] = 0.042031 
H[2][0] = -0.269680 H[2][1] = 0.084062 H[2][2] = 0.915938 H[2][3] = 0.168124 H[2][4] = 0.210156 H[2][5] = 0.084062 H[2][6] = -0.042031 
H[3][0] = 0.539360 H[3][1] = -0.168124 H[3][2] = 0.168124 H[3][3] = 0.663751 H[3][4] = -0.420311 H[3][5] = -0.168124 H[3][6] = 0.084062 
H[4][0] = 0.674200 H[4][1] = -0.210156 H[4][2] = 0.210156 H[4][3] = -0.420311 H[4][4] = 0.474611 H[4][5] = -0.210156 H[4][6] = 0.105078 
H[5][0] = 0.269680 H[5][1] = -0.084062 H[5][2] = 0.084062 H[5][3] = -0.168124 H[5][4] = -0.210156 H[5][5] = 0.915938 H[5][6] = 0.042031 
H[6][0] = -0.134840 H[6][1] = 0.042031 H[6][2] = -0.042031 H[6][3] = 0.084062 H[6][4] = 0.105078 H[6][5] = 0.042031 H[6][6] = 0.978984

Q is now H1:

Q[0][0] = 0.134840 Q[0][1] = 0.269680 Q[0][2] = -0.269680 Q[0][3] = 0.539360 Q[0][4] = 0.674200 Q[0][5] = 0.269680 Q[0][6] = -0.134840 
Q[1][0] = 0.269680 Q[1][1] = 0.915938 Q[1][2] = 0.084062 Q[1][3] = -0.168124 Q[1][4] = -0.210156 Q[1][5] = -0.084062 Q[1][6] = 0.042031 
Q[2][0] = -0.269680 Q[2][1] = 0.084062 Q[2][2] = 0.915938 Q[2][3] = 0.168124 Q[2][4] = 0.210156 Q[2][5] = 0.084062 Q[2][6] = -0.042031 
Q[3][0] = 0.539360 Q[3][1] = -0.168124 Q[3][2] = 0.168124 Q[3][3] = 0.663751 Q[3][4] = -0.420311 Q[3][5] = -0.168124 Q[3][6] = 0.084062 
Q[4][0] = 0.674200 Q[4][1] = -0.210156 Q[4][2] = 0.210156 Q[4][3] = -0.420311 Q[4][4] = 0.474611 Q[4][5] = -0.210156 Q[4][6] = 0.105078 
Q[5][0] = 0.269680 Q[5][1] = -0.084062 Q[5][2] = 0.084062 Q[5][3] = -0.168124 Q[5][4] = -0.210156 Q[5][5] = 0.915938 Q[5][6] = 0.042031 
Q[6][0] = -0.134840 Q[6][1] = 0.042031 Q[6][2] = -0.042031 Q[6][3] = 0.084062 Q[6][4] = 0.105078 Q[6][5] = 0.042031 Q[6][6] = 0.978984


~~~~~~~~~~ applyH function start ~~~~~~~~~~

gamma = 2/(v'v) = 0.865160

w = v'*A =
w[0] = -7.416198 w[1] = 4.909011 w[2] = 3.519810

u = gamma*v = 
u[0] = 0.865160 u[1] = -0.269680 u[2] = 0.269680 u[3] = -0.539360 u[4] = -0.674200 u[5] = -0.269680 u[6] = 0.134840 

A = A - u*w = 
A[0][0] = 7.416198 A[0][1] = 1.752920 A[0][2] = -4.045199 
A[1][0] = 0.000000 A[1][1] = -0.676138 A[1][2] = 1.949222 
A[2][0] = 0.000000 A[2][1] = -0.323862 A[2][2] = 3.050778 
A[3][0] = 0.000000 A[3][1] = 10.647724 A[3][2] = -3.101556 
A[4][0] = -0.000000 A[4][1] = -0.690345 A[4][2] = 3.373056 
A[5][0] = 0.000000 A[5][1] = 3.323862 A[5][2] = -1.050778 
A[6][0] = 0.000000 A[6][1] = 2.338069 A[6][2] = 3.525389 

~~~~~~~~~~~ applyH function end ~~~~~~~~~~~


Put v(k+1:m) -> A(k+1:m, k):

A[0][0] = 7.416198 A[0][1] = 1.752920 A[0][2] = -4.045199 
A[1][0] = -0.311711 A[1][1] = -0.676138 A[1][2] = 1.949222 
A[2][0] = 0.311711 A[2][1] = -0.323862 A[2][2] = 3.050778 
A[3][0] = -0.623422 A[3][1] = 10.647724 A[3][2] = -3.101556 
A[4][0] = -0.779278 A[4][1] = -0.690345 A[4][2] = 3.373056 
A[5][0] = -0.311711 A[5][1] = 3.323862 A[5][2] = -1.050778 
A[6][0] = 0.155856 A[6][1] = 2.338069 A[6][2] = 3.525389 


****************************** qrhouse Loop 2 ******************************

A = 
A[0][0] = -0.676138 A[0][1] = 1.949222 
A[1][0] = -0.323862 A[1][1] = 3.050778 
A[2][0] = 10.647724 A[2][1] = -3.101556 
A[3][0] = -0.690345 A[3][1] = 3.373056 
A[4][0] = 3.323862 A[4][1] = -1.050778 
A[5][0] = 2.338069 A[5][1] = 3.525389 


Get the first column of A, a2(column vector displayed in a row):

-0.676138, -0.323862, 10.647724, -0.690345, 3.323862, 2.338069 


Compute the reflector v2 = a2 - sign(a21)*||a2||*e1,
since a21 = -0.676138, sign should be -1, and ||a2|| = 11.442346,
after normalizing v2[0] to 1, v2 will be(column vector displayed in a row):

1.000000, -0.030081, 0.988995, -0.064121, 0.308731, 0.217167 


Now we calculate H2 = I - (2/v2'v2)v2v2':
(Although H itself is not needed in smart way, here we just use it to get Q, then verify whether Q * R = original A)

H[0][0] = 1.000000 H[0][1] = 0.000000 H[0][2] = 0.000000 H[0][3] = 0.000000 H[0][4] = 0.000000 H[0][5] = 0.000000 H[0][6] = 0.000000 
H[1][0] = 0.000000 H[1][1] = 0.059091 H[1][2] = 0.028304 H[1][3] = -0.930554 H[1][4] = 0.060332 H[1][5] = -0.290488 H[1][6] = -0.204335 
H[2][0] = 0.000000 H[2][1] = 0.028304 H[2][2] = 0.999149 H[2][3] = 0.027992 H[2][4] = -0.001815 H[2][5] = 0.008738 H[2][6] = 0.006147 
H[3][0] = 0.000000 H[3][1] = -0.930554 H[3][2] = 0.027992 H[3][3] = 0.079687 H[3][4] = 0.059669 H[3][5] = -0.287291 H[3][6] = -0.202086 
H[4][0] = 0.000000 H[4][1] = 0.060332 H[4][2] = -0.001815 H[4][3] = 0.059669 H[4][4] = 0.996131 H[4][5] = 0.018627 H[4][6] = 0.013102 
H[5][0] = 0.000000 H[5][1] = -0.290488 H[5][2] = 0.008738 H[5][3] = -0.287291 H[5][4] = 0.018627 H[5][5] = 0.910317 H[5][6] = -0.063084 
H[6][0] = 0.000000 H[6][1] = -0.204335 H[6][2] = 0.006147 H[6][3] = -0.202086 H[6][4] = 0.013102 H[6][5] = -0.063084 H[6][6] = 0.955625 

Q is now H1*H2:

Q[0][0] = 0.134840 Q[0][1] = -0.503711 Q[0][2] = -0.246415 Q[0][3] = -0.225520 Q[0][4] = 0.723791 Q[0][5] = 0.030910 Q[0][6] = -0.302795 
Q[1][0] = 0.269680 Q[1][1] = 0.216103 Q[1][2] = 0.105114 Q[1][3] = -0.860257 Q[1][4] = -0.165281 Q[1][5] = -0.300123 Q[1][6] = -0.109950 
Q[2][0] = -0.269680 Q[2][1] = -0.128709 Q[2][2] = 0.922338 Q[2][3] = -0.042305 Q[2][4] = 0.223799 Q[2][5] = 0.018373 Q[2][6] = -0.088238 
Q[3][0] = 0.539360 Q[3][1] = -0.616530 Q[3][2] = 0.181613 Q[3][3] = 0.220281 Q[3][4] = -0.391559 Q[3][5] = -0.306561 Q[3][6] = -0.013317 
Q[4][0] = 0.674200 Q[4][1] = 0.452863 Q[4][2] = 0.190211 Q[4][3] = 0.235411 Q[4][4] = 0.432097 Q[4][5] = -0.005461 Q[4][6] = 0.249064 
Q[5][0] = 0.269680 Q[5][1] = -0.133475 Q[5][2] = 0.085549 Q[5][3] = -0.216994 Q[5][4] = -0.206987 Q[5][5] = 0.900682 Q[5][6] = 0.031300 
Q[6][0] = -0.134840 Q[6][1] = -0.282841 Q[6][2] = -0.032259 Q[6][3] = -0.237235 Q[6][4] = 0.125909 Q[6][5] = -0.058267 Q[6][6] = 0.908433 


~~~~~~~~~~ applyH function start ~~~~~~~~~~

gamma = 2/(v'v) = 0.940909

w = v'*A =
w[0] = 11.442346 w[1] = -0.985065 

u = gamma*v = 
u[0] = 0.940909 u[1] = -0.028304 u[2] = 0.930554 u[3] = -0.060332 u[4] = 0.290488 u[5] = 0.204335 

A = A - u*w = 
A[0][0] = -11.442346 A[0][1] = 2.876079 
A[1][0] = -0.000000 A[1][1] = 3.022897 
A[2][0] = 0.000000 A[2][1] = -2.184899 
A[3][0] = -0.000000 A[3][1] = 3.313624 
A[4][0] = 0.000000 A[4][1] = -0.764628 
A[5][0] = 0.000000 A[5][1] = 3.726672 

~~~~~~~~~~~ applyH function end ~~~~~~~~~~~


Put v(k+1:m) -> A(k+1:m, k):

A[0][0] = 7.416198 A[0][1] = 1.752920 A[0][2] = -4.045199 
A[1][0] = -0.311711 A[1][1] = -11.442346 A[1][2] = 2.876079 
A[2][0] = 0.311711 A[2][1] = -0.030081 A[2][2] = 3.022897 
A[3][0] = -0.623422 A[3][1] = 0.988995 A[3][2] = -2.184899 
A[4][0] = -0.779278 A[4][1] = -0.064121 A[4][2] = 3.313624 
A[5][0] = -0.311711 A[5][1] = 0.308731 A[5][2] = -0.764628 
A[6][0] = 0.155856 A[6][1] = 0.217167 A[6][2] = 3.726672 


****************************** qrhouse Loop 3 ******************************

A = 
A[0][0] = 3.022897 
A[1][0] = -2.184899 
A[2][0] = 3.313624 
A[3][0] = -0.764628 
A[4][0] = 3.726672 


Get the first column of A, a3(column vector displayed in a row):

3.022897, -2.184899, 3.313624, -0.764628, 3.726672 


Compute the reflector v3 = a3 - sign(a31)*||a3||*e1,
since a31 = 3.022897, sign should be 1, and ||a3|| = 6.274116,
after normalizing v3[0] to 1, v3 will be(column vector displayed in a row):

1.000000, 0.672024, -1.019194, 0.235182, -1.146238 


Now we calculate H3 = I - (2/v3'v3)v3v3':
(Although H itself is not needed in smart way, here we just use it to get Q, then verify whether Q * R = original A)

H[0][0] = 1.000000 H[0][1] = 0.000000 H[0][2] = 0.000000 H[0][3] = 0.000000 H[0][4] = 0.000000 H[0][5] = 0.000000 H[0][6] = 0.000000 
H[1][0] = 0.000000 H[1][1] = 1.000000 H[1][2] = 0.000000 H[1][3] = 0.000000 H[1][4] = 0.000000 H[1][5] = 0.000000 H[1][6] = 0.000000 
H[2][0] = 0.000000 H[2][1] = 0.000000 H[2][2] = 0.481804 H[2][3] = -0.348240 H[2][4] = 0.528142 H[2][5] = -0.121870 H[2][6] = 0.593976 
H[3][0] = 0.000000 H[3][1] = 0.000000 H[3][2] = -0.348240 H[3][3] = 0.765974 H[3][4] = 0.354924 H[3][5] = -0.081900 H[3][6] = 0.399166 
H[4][0] = 0.000000 H[4][1] = 0.000000 H[4][2] = 0.528142 H[4][3] = 0.354924 H[4][4] = 0.461721 H[4][5] = 0.124209 H[4][6] = -0.605377 
H[5][0] = 0.000000 H[5][1] = 0.000000 H[5][2] = -0.121870 H[5][3] = -0.081900 H[5][4] = 0.124209 H[5][5] = 0.971338 H[5][6] = 0.139692 
H[6][0] = 0.000000 H[6][1] = 0.000000 H[6][2] = 0.593976 H[6][3] = 0.399166 H[6][4] = -0.605377 H[6][5] = 0.139692 H[6][6] = 0.319162 

Q is now H1*H2*H3: 

Q[0][0] = 0.134840 Q[0][1] = -0.503711 Q[0][2] = 0.158455 Q[0][3] = 0.046563 Q[0][4] = 0.311149 Q[0][5] = 0.126128 Q[0][6] = -0.766874 
Q[1][0] = 0.269680 Q[1][1] = 0.216103 Q[1][2] = 0.234197 Q[1][3] = -0.773510 Q[1][4] = -0.296842 Q[1][5] = -0.269765 Q[1][6] = -0.257910 
Q[2][0] = -0.269680 Q[2][1] = -0.128709 Q[2][2] = 0.522666 Q[2][3] = -0.310894 Q[2][4] = 0.631142 Q[2][5] = -0.075622 Q[2][6] = 0.369882 
Q[3][0] = 0.539360 Q[3][1] = -0.616530 Q[3][2] = -0.166556 Q[3][3] = -0.013698 Q[3][4] = -0.036706 Q[3][5] = -0.388444 Q[3][6] = 0.385768 
Q[4][0] = 0.674200 Q[4][1] = 0.452863 Q[4][2] = 0.386477 Q[4][3] = 0.367307 Q[4][4] = 0.232064 Q[4][5] = 0.040697 Q[4][6] = 0.024096 
Q[5][0] = 0.269680 Q[5][1] = -0.133475 Q[5][2] = -0.083710 Q[5][3] = -0.330740 Q[5][4] = -0.034480 Q[5][5] = 0.860876 Q[5][6] = 0.225311 
Q[6][0] = -0.134840 Q[6][1] = -0.282841 Q[6][2] = 0.680258 Q[6][3] = 0.241594 Q[6][4] = -0.600284 Q[6][5] = 0.109304 Q[6][6] = 0.091719 


~~~~~~~~~~ applyH function start ~~~~~~~~~~

gamma = 2/(v'v) = 0.518196

w = v'*A =
w[0] = -6.274116 

u = gamma*v = 
u[0] = 0.518196 u[1] = 0.348240 u[2] = -0.528142 u[3] = 0.121870 u[4] = -0.593976 

A = A - u*w = 
A[0][0] = 6.274116 
A[1][0] = 0.000000 
A[2][0] = -0.000000 
A[3][0] = 0.000000 
A[4][0] = -0.000000 

~~~~~~~~~~~ applyH function end ~~~~~~~~~~~


Put v(k+1:m) -> A(k+1:m, k):

A[0][0] = 7.416198 A[0][1] = 1.752920 A[0][2] = -4.045199 
A[1][0] = -0.311711 A[1][1] = -11.442346 A[1][2] = 2.876079 
A[2][0] = 0.311711 A[2][1] = -0.030081 A[2][2] = 6.274116 
A[3][0] = -0.623422 A[3][1] = 0.988995 A[3][2] = 0.672024 
A[4][0] = -0.779278 A[4][1] = -0.064121 A[4][2] = -1.019194 
A[5][0] = -0.311711 A[5][1] = 0.308731 A[5][2] = 0.235182 
A[6][0] = 0.155856 A[6][1] = 0.217167 A[6][2] = -1.146238 


***************************** qrhouse loop end *****************************


The Q factor is:
Q[0][0] = 0.134840 Q[0][1] = -0.503711 Q[0][2] = 0.158455 Q[0][3] = 0.046563 Q[0][4] = 0.311149 Q[0][5] = 0.126128 Q[0][6] = -0.766874 
Q[1][0] = 0.269680 Q[1][1] = 0.216103 Q[1][2] = 0.234197 Q[1][3] = -0.773510 Q[1][4] = -0.296842 Q[1][5] = -0.269765 Q[1][6] = -0.257910 
Q[2][0] = -0.269680 Q[2][1] = -0.128709 Q[2][2] = 0.522666 Q[2][3] = -0.310894 Q[2][4] = 0.631142 Q[2][5] = -0.075622 Q[2][6] = 0.369882 
Q[3][0] = 0.539360 Q[3][1] = -0.616530 Q[3][2] = -0.166556 Q[3][3] = -0.013698 Q[3][4] = -0.036706 Q[3][5] = -0.388444 Q[3][6] = 0.385768 
Q[4][0] = 0.674200 Q[4][1] = 0.452863 Q[4][2] = 0.386477 Q[4][3] = 0.367307 Q[4][4] = 0.232064 Q[4][5] = 0.040697 Q[4][6] = 0.024096 
Q[5][0] = 0.269680 Q[5][1] = -0.133475 Q[5][2] = -0.083710 Q[5][3] = -0.330740 Q[5][4] = -0.034480 Q[5][5] = 0.860876 Q[5][6] = 0.225311 
Q[6][0] = -0.134840 Q[6][1] = -0.282841 Q[6][2] = 0.680258 Q[6][3] = 0.241594 Q[6][4] = -0.600284 Q[6][5] = 0.109304 Q[6][6] = 0.091719 

The R factor is: 
R[0][0] = 7.416198 R[0][1] = 1.752920 R[0][2] = -4.045199 
R[1][0] = 0.000000 R[1][1] = -11.442346 R[1][2] = 2.876079 
R[2][0] = 0.000000 R[2][1] = 0.000000 R[2][2] = 6.274116 
R[3][0] = 0.000000 R[3][1] = 0.000000 R[3][2] = 0.000000 
R[4][0] = 0.000000 R[4][1] = 0.000000 R[4][2] = 0.000000 
R[5][0] = 0.000000 R[5][1] = 0.000000 R[5][2] = 0.000000 
R[6][0] = 0.000000 R[6][1] = 0.000000 R[6][2] = 0.000000 

Q * R = 
QR[0][0] = 1.000000 QR[0][1] = 6.000000 QR[0][2] = -1.000000 
QR[1][0] = 2.000000 QR[1][1] = -2.000000 QR[1][2] = 1.000000 
QR[2][0] = -2.000000 QR[2][1] = 1.000000 QR[2][2] = 4.000000 
QR[3][0] = 4.000000 QR[3][1] = 8.000000 QR[3][2] = -5.000000 
QR[4][0] = 5.000000 QR[4][1] = -4.000000 QR[4][2] = 1.000000 
QR[5][0] = 2.000000 QR[5][1] = 2.000000 QR[5][2] = -2.000000 
QR[6][0] = -1.000000 QR[6][1] = 3.000000 QR[6][2] = 4.000000 


****** The same with the original matrix A, QR factorization correct! ******

Now, let's solve b = applyQ(A, b).
The vector b is initialized as an array of:
{1, 1/2, 1/3, 1/4, 1/5, 1/6, 1/7}


~~~~~~~~~~~~~~~~ applyQ Loop 1 ~~~~~~~~~~~~~~~~

b = 
b[0] = 1.000000 b[1] = 0.500000 b[2] = 0.333333 b[3] = 0.250000 b[4] = 0.200000 b[5] = 0.166667 b[6] = 0.142857 

v = 
v[0] = 1.000000 v[1] = -0.311711 v[2] = 0.311711 v[3] = -0.623422 v[4] = -0.779278 v[5] = -0.311711 v[6] = 0.155856 

b = applyH(b, v) = 
b[0] = 0.475150 b[1] = 0.663601 b[2] = 0.169732 b[3] = 0.577203 b[4] = 0.609004 b[5] = 0.330268 b[6] = 0.061056 


~~~~~~~~~~~~~~~~ applyQ Loop 2 ~~~~~~~~~~~~~~~~

b = 
b[0] = 0.663601 b[1] = 0.169732 b[2] = 0.577203 b[3] = 0.609004 b[4] = 0.330268 b[5] = 0.061056 

v = 
v[0] = 1.000000 v[1] = -0.030081 v[2] = 0.988995 v[3] = -0.064121 v[4] = 0.308731 v[5] = 0.217167 

b = applyH(b, v) = 
b[0] = -0.564774 b[1] = 0.206683 b[2] = -0.637654 b[3] = 0.687769 b[4] = -0.048969 b[5] = -0.205707 


~~~~~~~~~~~~~~~~ applyQ Loop 3 ~~~~~~~~~~~~~~~~

b = 
b[0] = 0.206683 b[1] = -0.637654 b[2] = 0.687769 b[3] = -0.048969 b[4] = -0.205707 

v = 
v[0] = 1.000000 v[1] = 0.672024 v[2] = -1.019194 v[3] = 0.235182 v[4] = -1.146238 

b = applyH(b, v) = 
b[0] = 0.568660 b[1] = -0.394396 b[2] = 0.318844 b[3] = 0.036161 b[4] = -0.620619 


~~~~~~~~~~~~~~~ applyQ loop end ~~~~~~~~~~~~~~~


Finally, let's solve the least squares problem: min_x || Ax - b ||
x = triu(A(1:n,1:n))\b(1:n)


The full A is now:
A[0][0] = 7.416198 A[0][1] = 1.752920 A[0][2] = -4.045199 
A[1][0] = -0.311711 A[1][1] = -11.442346 A[1][2] = 2.876079 
A[2][0] = 0.311711 A[2][1] = -0.030081 A[2][2] = 6.274116 
A[3][0] = -0.623422 A[3][1] = 0.988995 A[3][2] = 0.672024 
A[4][0] = -0.779278 A[4][1] = -0.064121 A[4][2] = -1.019194 
A[5][0] = -0.311711 A[5][1] = 0.308731 A[5][2] = 0.235182 
A[6][0] = 0.155856 A[6][1] = 0.217167 A[6][2] = -1.146238 

The upper triangular matrix of A is:
R[0][0] = 7.416198 R[0][1] = 1.752920 R[0][2] = -4.045199 
R[1][0] = 0.000000 R[1][1] = -11.442346 R[1][2] = 2.876079 
R[2][0] = 0.000000 R[2][1] = 0.000000 R[2][2] = 6.274116 


The full b is now:
b[0] = 0.475150 b[1] = -0.564774 b[2] = 0.568660 b[3] = -0.394396 b[4] = 0.318844 b[5] = 0.036161 b[6] = -0.620619

The part of b we need is:
b[0] = 0.475150 b[1] = -0.564774 b[2] = 0.568660 


Finally, x = triu(A(1:n,1:n))\b(1:n) = 
x[0] = 0.096456	x[1] = 0.072140	x[2] = 0.090636	
